/* tslint:disable */
/* eslint-disable */
/**
 * pass Culture pro private API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AwesomEnum,
    AwesomEnumFromJSON,
    AwesomEnumToJSON,
    BookingStatusFilter,
    BookingStatusFilterFromJSON,
    BookingStatusFilterToJSON,
    ListBookingsResponseModel,
    ListBookingsResponseModelFromJSON,
    ListBookingsResponseModelToJSON,
} from '../models';

export interface GetBookingsGetBookingsProRequest {
    awesomeProp: AwesomEnum;
    awesomePropUnion: AwesomEnum | number;
    bookingStatusFilter?: BookingStatusFilter | null;
    awesomePropOptional?: AwesomEnum | null;
    awesomePropOptionalUnion?: AwesomEnum | number | null;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * 
     * get_bookings_pro <GET>
     */
    async getBookingsGetBookingsProRaw(requestParameters: GetBookingsGetBookingsProRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ListBookingsResponseModel>> {
        if (requestParameters.awesomeProp === null || requestParameters.awesomeProp === undefined) {
            throw new runtime.RequiredError('awesomeProp','Required parameter requestParameters.awesomeProp was null or undefined when calling getBookingsGetBookingsPro.');
        }

        if (requestParameters.awesomePropUnion === null || requestParameters.awesomePropUnion === undefined) {
            throw new runtime.RequiredError('awesomePropUnion','Required parameter requestParameters.awesomePropUnion was null or undefined when calling getBookingsGetBookingsPro.');
        }

        const queryParameters: any = {};

        if (requestParameters.bookingStatusFilter !== undefined) {
            queryParameters['bookingStatusFilter'] = requestParameters.bookingStatusFilter;
        }

        if (requestParameters.awesomeProp !== undefined) {
            queryParameters['awesomeProp'] = requestParameters.awesomeProp;
        }

        if (requestParameters.awesomePropOptional !== undefined) {
            queryParameters['awesomePropOptional'] = requestParameters.awesomePropOptional;
        }

        if (requestParameters.awesomePropUnion !== undefined) {
            queryParameters['awesomePropUnion'] = requestParameters.awesomePropUnion;
        }

        if (requestParameters.awesomePropOptionalUnion !== undefined) {
            queryParameters['awesomePropOptionalUnion'] = requestParameters.awesomePropOptionalUnion;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/bookings/pro`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListBookingsResponseModelFromJSON(jsonValue));
    }

    /**
     * 
     * get_bookings_pro <GET>
     */
    async getBookingsGetBookingsPro(awesomeProp: AwesomEnum, awesomePropUnion: AwesomEnum | number, bookingStatusFilter?: BookingStatusFilter | null, awesomePropOptional?: AwesomEnum | null, awesomePropOptionalUnion?: AwesomEnum | number | null, initOverrides?: RequestInit): Promise<ListBookingsResponseModel> {
        const response = await this.getBookingsGetBookingsProRaw({ awesomeProp: awesomeProp, awesomePropUnion: awesomePropUnion, bookingStatusFilter: bookingStatusFilter, awesomePropOptional: awesomePropOptional, awesomePropOptionalUnion: awesomePropOptionalUnion }, initOverrides);
        return await response.value();
    }

}
